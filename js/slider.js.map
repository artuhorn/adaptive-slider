{"version":3,"sources":["es6/slider.js"],"names":[],"mappings":"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","file":"slider.js","sourcesContent":["/**\r\n * Created by Aleksandr Pashnin\r\n */\r\n\"use strict\";\r\n\r\nclass Slider {\r\n\r\n   constructor() {\r\n      this.autoSwitchInterval  = 3000;\r\n      this.animatingContainers = [];\r\n      this.timers              = [];\r\n   }\r\n\r\n   /**\r\n    * Проверяет возожможно ли выполнить переключение слайда в конкретном контейнере.\r\n    * @param slider - HTMLElement, в котором располагаются слайды\r\n    * @returns {boolean} - true, если переключение возможно. Если переключение уже выполняется, то\r\n    * возвращается false\r\n    */\r\n   canAnimate(slider) {\r\n      var element             = $(slider)[0],\r\n          animatingContainers = this.animatingContainers;\r\n\r\n      for (var i = 0; i < animatingContainers.length; i++) {\r\n         if (animatingContainers[i] === element) {\r\n            return false;\r\n         }\r\n      }\r\n\r\n      return true;\r\n   } // -> end canAnimate\r\n\r\n\r\n   /**\r\n    * Устанавливает состояние анимации для указанного слайдера\r\n    * @param slider - jQuery Element\r\n    * @param state - состояние:\r\n    *    true - в слайдере выполняется переключение слайда\r\n    *    false - анимация закончена\r\n    */\r\n   setAnimationState(slider, state) {\r\n      var element             = $(slider)[0],\r\n          animatingContainers = this.animatingContainers;\r\n\r\n      if (state) {\r\n         animatingContainers.push(element);\r\n      } else {\r\n         animatingContainers.splice(animatingContainers.indexOf(element), 1);\r\n      }\r\n   } // -> end setAnimationState\r\n\r\n\r\n   /**\r\n    * Функция сохраняет в специальном внутреннем контейнере идентификаторы таймеров\r\n    * для каждого слайдера\r\n    * @param slider - jQuery Element\r\n    * @param timerID {number}\r\n    */\r\n   setTimerID(slider, timerID) {\r\n\r\n      var element = $(slider)[0],\r\n          timers  = this.timers;\r\n\r\n      // Функция ищет индекс элемента, в котором хранится инденификатор таймера\r\n      // для указанного слайдера\r\n      function indexOf() {\r\n         for (var i = 0; i < timers.length; i++) {\r\n            if (timers[i]['element'] === element) {\r\n               return i;\r\n            }\r\n         }\r\n\r\n         return -1;\r\n      }\r\n\r\n      var index = indexOf();\r\n      // Если инденификатор таймера указан, то необходимо его сохранить\r\n      if (timerID) {\r\n         // Если для слайдера уже ранее запускался обработчик setInterval, то\r\n         // необходимо его отключить, после чего записать новый идентификатор\r\n         if (index > - 1) {\r\n            clearInterval(timers[index]['timerID']);\r\n            timers[index]['timerID'] = timerID;\r\n         // В противном случае добавляем новый объект с информацией в массив\r\n         } else {\r\n            timers.push({'element': element, 'timerID': timerID});\r\n         }\r\n\r\n      // Если идентификатор не указан, то необходимо отключить обработчик setInterval\r\n      // для указанного слайдера\r\n      } else {\r\n         if (index > -1) {\r\n            clearInterval(timers[index]['timerID']);\r\n            timers.splice(index, 1);\r\n         }\r\n      }\r\n   } // -> end setTimerID\r\n\r\n\r\n   /**\r\n    * Функция возвращает элементы, ближайший parentSelector которых указанный container\r\n    *\r\n    * Необходима для выбора только тех элементов, которые находятся непосредственно в\r\n    * указанном контейнере, без учета аналогичных вложенных контейнеров\r\n    *\r\n    * Например, когда требуется выбрать все слайды конкретного слайдера, без учета\r\n    * слайдов, которые лежат во вложенном слайдере\r\n    * */\r\n   getChildElements(container, parentSelector, childrenSelector) {\r\n      return container.find(childrenSelector).filter(function() {\r\n         return $(this).closest(parentSelector)[0] === container[0];\r\n      });\r\n   }\r\n\r\n\r\n   /**\r\n    * Инициализация работы объекта\r\n    */\r\n   init() {\r\n\r\n      this.createToggles();\r\n      this.createControls();\r\n      this.runAutoSwitch();\r\n\r\n      $('.adaptive-slider__controls-button').on('click', {self: this}, this.onControlClick);\r\n      $('.adaptive-slider__toggle').on('click', {self: this}, this.onToggleClick);\r\n   }\r\n\r\n\r\n   /**\r\n    * Создает переключатели для навигации по слайдам\r\n    */\r\n   createToggles() {\r\n\r\n      var sliders      = $('.adaptive-slider'),\r\n          toggleMarkup = '<li class=\"adaptive-slider__toggle\"></li>';\r\n\r\n      // Создаем переключатели для каждого слайдера\r\n      var self = this;\r\n      sliders.each(function() {\r\n\r\n         var $slider    = $(this),\r\n             useToggles = $slider.data(\"toggles\");\r\n         if (!useToggles) return;\r\n\r\n         var slides           = self.getChildElements($slider, '.adaptive-slider', '.adaptive-slider__item'),\r\n             togglesContainer = self.getChildElements($slider, '.adaptive-slider', '.adaptive-slider__toggles');\r\n\r\n         for (var i = 0; i < slides.length; i++) {\r\n            togglesContainer.append(toggleMarkup);\r\n         }\r\n\r\n         self.setActiveToggle(togglesContainer);\r\n\r\n      }); // -> end sliders.each(...)\r\n\r\n   } // -> end createToggles()\r\n\r\n\r\n   /**\r\n    * Делает активным переключатель, соответствующий индексу активного слайда\r\n    * @param togglesContainer - ul, в котором находятся переключатели\r\n    */\r\n   setActiveToggle(togglesContainer) {\r\n\r\n      var slider  = togglesContainer.closest('.adaptive-slider'),\r\n          slides  = this.getChildElements(slider, '.adaptive-slider', '.adaptive-slider__item'),\r\n          toggles = togglesContainer.find('.adaptive-slider__toggle');\r\n\r\n      toggles.eq(slides.filter('.adaptive-slider__item--active').index())\r\n         .addClass('adaptive-slider__toggle--active')\r\n         .siblings()\r\n         .removeClass('adaptive-slider__toggle--active');\r\n\r\n   } // -> end setActiveToggle()\r\n\r\n\r\n   /**\r\n    * Создает кнопки для навигации по слайдам вперед-назад\r\n    */\r\n   createControls() {\r\n\r\n      var sliders        = $('.adaptive-slider'),\r\n          controlsMarkup = '\\\r\n               <div class=\"adaptive-slider__controls-button adaptive-slider__controls-button--next\">&gt</div> \\\r\n               <div class=\"adaptive-slider__controls-button adaptive-slider__controls-button--prev\">&lt</div>';\r\n\r\n      // Создаем кнопки для каждого слайдера\r\n      var self = this;\r\n      sliders.each(function() {\r\n\r\n         var $slider     = $(this),\r\n             useControls = $slider.data(\"controls\");\r\n\r\n         if (!useControls) return;\r\n\r\n         var controlsContainer = self.getChildElements($slider, '.adaptive-slider', '.adaptive-slider__controls');\r\n         controlsContainer.append(controlsMarkup);\r\n\r\n      }); // -> end sliders.each()\r\n\r\n   } // -> end createControls()\r\n\r\n   /**\r\n    * Функция выполняет запуск функции автоматического пролистывания слайдов у тех\r\n    * слайдеров, у которых данная настройка включена\r\n    */\r\n   runAutoSwitch() {\r\n\r\n      var sliders = $('.adaptive-slider');\r\n\r\n      // Запускаем обработчики для каждого слайдера\r\n      var self = this;\r\n      sliders.each(function() {\r\n\r\n         var $slider       = $(this),\r\n             useAutoSwitch = $slider.data(\"autoswitch\");\r\n\r\n         if (useAutoSwitch) {\r\n            self.setAutoSwitch($slider, true);\r\n         }\r\n\r\n      }); // end sliders.each()\r\n\r\n   } // -> end runAutoSwitch\r\n\r\n\r\n   /**\r\n    * Функция выполняет подключение функции для автоматического перелистывания слайдов\r\n    * с указанной периодичностью\r\n    * @param slider - jQuery Element\r\n    * @param enable {boolean} - Если указано false, то автоматическое пролистывание отключается\r\n    */\r\n   setAutoSwitch(slider, enable) {\r\n\r\n      if (enable) {\r\n\r\n         var timerID = setInterval( () => {\r\n\r\n            var slides      = this.getChildElements(slider, '.adaptive-slider', '.adaptive-slider__item'),\r\n                activeSlide = slides.filter('.adaptive-slider__item--active'),\r\n                nextSlide   = activeSlide.next(),\r\n                firstSlide  = slides.first();\r\n\r\n            if (nextSlide.length) {\r\n               this.moveSlide(nextSlide, 'forward');\r\n            } else {\r\n               this.moveSlide(firstSlide, 'forward');\r\n            }\r\n\r\n         }, this.autoSwitchInterval);\r\n\r\n         this.setTimerID(slider, timerID);\r\n\r\n      } else {\r\n         this.setTimerID(slider, null);\r\n      }\r\n\r\n   } // -> end setAutoSwitch\r\n\r\n\r\n   /**\r\n    * Функция сбрасывает таймер для автоматического перелистывания слайдов\r\n    * @param slider - jQuery Element\r\n    */\r\n   resetTimer(slider) {\r\n\r\n      if (slider) {\r\n         var useAutoSwitch = slider.data(\"autoswitch\");\r\n\r\n         this.setAutoSwitch(slider, false);\r\n         if (useAutoSwitch) {\r\n            this.setAutoSwitch(slider, useAutoSwitch);\r\n         }\r\n      }\r\n   } // -> end resetTimer\r\n\r\n   /**\r\n    * Функция выполняет перелистывание слайдов\r\n    * @param selectedSlide - jQuery Element - Слайд, который необходимо показать\r\n    * @param direction - Направление перелистывания\r\n    *    'forward' - перелистывание вперед (следующий слайд)\r\n    *    'backward' - перелистывание назад (предыдущий слайд)\r\n    */\r\n   moveSlide(selectedSlide, direction) {\r\n\r\n      var slider       = selectedSlide.closest('.adaptive-slider'),\r\n          slides       = this.getChildElements(slider, '.adaptive-slider', '.adaptive-slider__item'),\r\n          activeSlide  = slides.filter('.adaptive-slider__item--active'),\r\n          slideWidth   = slides.width(),\r\n          duration     = 500,\r\n          leftPosition = 0,\r\n          offset       = 0;\r\n\r\n      // Если анимация перелистывания уже выполняется, то ничего не делаем\r\n      if (!this.canAnimate(slider)) {\r\n         return;\r\n      } else {\r\n         this.setAnimationState(slider, true);\r\n      }\r\n\r\n      if (slides.length <= 1) return;\r\n\r\n      if (direction === 'forward') {\r\n         leftPosition = slideWidth;\r\n         offset       = -slideWidth;\r\n\r\n      } else if (direction === 'backward') {\r\n         leftPosition = -slideWidth;\r\n         offset       = slideWidth;\r\n      }\r\n\r\n      // Сдвигаем текущий активный слайд\r\n      activeSlide.animate({left: offset}, duration);\r\n\r\n      // Сдвигаем выбранный слайд\r\n      var self = this;\r\n      selectedSlide.css('left', leftPosition)\r\n         .addClass('adaptive-slider__item--selected');\r\n      selectedSlide.animate({left: 0}, duration, function () {\r\n\r\n         var $this            = $(this),\r\n             slider           = $this.closest('.adaptive-slider'),\r\n             togglesContainer = self.getChildElements(slider, '.adaptive-slider', '.adaptive-slider__toggles');\r\n\r\n         slides.css('left', 0)\r\n            .removeClass('adaptive-slider__item--active');\r\n\r\n         $this.toggleClass('adaptive-slider__item--selected adaptive-slider__item--active');\r\n\r\n         self.setActiveToggle(togglesContainer);\r\n         self.setAnimationState(slider, false);\r\n\r\n      }); // -> end selectedSlide.animate()\r\n\r\n   } // -> end moveSlide\r\n\r\n\r\n   /**\r\n    * Обработчик события клика по переключателю\r\n    * @param event\r\n    */\r\n   onToggleClick(event) {\r\n      event.preventDefault();\r\n\r\n      var self = event.data.self;\r\n\r\n      var $this         = $(this),\r\n          container     = $this.closest('.adaptive-slider'),\r\n          toggles       = $this.closest('.adaptive-slider__toggles').find('.adaptive-slider__toggle'),\r\n          activeToggle  = toggles.filter('.adaptive-slider__toggle--active'),\r\n          direction     = ($this.index() > activeToggle.index()) ? 'forward' : 'backward',\r\n          slides        = self.getChildElements(container, '.adaptive-slider', '.adaptive-slider__item'),\r\n          selectedSlide = slides.eq($this.index());\r\n\r\n      if (!$this.hasClass('adaptive-slider__toggle--active')) {\r\n         self.resetTimer(container);\r\n         self.moveSlide(selectedSlide, direction);\r\n      }\r\n   }\r\n\r\n\r\n   /**\r\n    * Обработчик события клика по кнопке\r\n    * @param event\r\n    */\r\n   onControlClick(event) {\r\n      event.preventDefault();\r\n\r\n      var self = event.data.self;\r\n\r\n      var $this       = $(this),\r\n          container   = $this.closest('.adaptive-slider'),\r\n          slides      = self.getChildElements(container, '.adaptive-slider', '.adaptive-slider__item'),\r\n          activeSlide = slides.filter('.adaptive-slider__item--active'),\r\n          nextSlide   = activeSlide.next(),\r\n          prevSlide   = activeSlide.prev(),\r\n          firstSlide  = slides.first(),\r\n          lastSlide   = slides.last();\r\n\r\n      self.resetTimer(container);\r\n\r\n      // Смотрим, на какую кнопку нажали\r\n      if ($this.hasClass('adaptive-slider__controls-button--next')) {\r\n         if (nextSlide.length) {\r\n            self.moveSlide(nextSlide, 'forward');\r\n         } else {\r\n            self.moveSlide(firstSlide, 'forward');\r\n         }\r\n\r\n      } else {\r\n         if (prevSlide.length) {\r\n            self.moveSlide(prevSlide, 'backward');\r\n         } else {\r\n            self.moveSlide(lastSlide, 'backward');\r\n         }\r\n      }\r\n   } // -> end onControlClick\r\n\r\n} // -> end class Slider"]}